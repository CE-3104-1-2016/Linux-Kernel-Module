<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_arduino_l_k_m_8c" kind="file">
    <compoundname>ArduinoLKM.c</compoundname>
    <includes local="no">linux/init.h</includes>
    <includes local="no">linux/module.h</includes>
    <includes local="no">linux/kernel.h</includes>
    <includes local="no">linux/kobject.h</includes>
    <includes refid="file_handler_8c" local="yes">fileHandler.c</includes>
    <incdepgraph>
      <node id="43">
        <label>linux/init.h</label>
      </node>
      <node id="42">
        <label>Program/ArduinoLKM.c</label>
        <link refid="ArduinoLKM.c"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>linux/kernel.h</label>
      </node>
      <node id="52">
        <label>asm/uaccess.h</label>
      </node>
      <node id="49">
        <label>linux/file.h</label>
      </node>
      <node id="44">
        <label>linux/module.h</label>
      </node>
      <node id="50">
        <label>linux/fs.h</label>
      </node>
      <node id="46">
        <label>linux/kobject.h</label>
      </node>
      <node id="51">
        <label>linux/fcntl.h</label>
      </node>
      <node id="48">
        <label>linux/syscalls.h</label>
      </node>
      <node id="47">
        <label>fileHandler.c</label>
        <link refid="file_handler_8c"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_arduino_l_k_m_8c_1a1354a592d6db4e5c89984fdd416bace7" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int buttonStats</definition>
        <argsstring></argsstring>
        <name>buttonStats</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="23" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_arduino_l_k_m_8c_1a9b7043b3cbe520fa62f80eaed99a84ec" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int burstRep</definition>
        <argsstring></argsstring>
        <name>burstRep</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="24" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_arduino_l_k_m_8c_1a40487007853c5eaf807268ff7d297d28" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool ledStatus</definition>
        <argsstring></argsstring>
        <name>ledStatus</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="25" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_arduino_l_k_m_8c_1a6e24600817f0de10c424d8fd7fca10ad" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool ledMode</definition>
        <argsstring></argsstring>
        <name>ledMode</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="26" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_arduino_l_k_m_8c_1ae19f96b31d756a71891930d278d3a428" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char arduinoPort[8]</definition>
        <argsstring>[8]</argsstring>
        <name>arduinoPort</name>
        <initializer>= &quot;ttyACM0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="27" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_arduino_l_k_m_8c_1a6ea165d2ce4a681cd3742cce06f22e69" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char arduinoLocation[13]</definition>
        <argsstring>[13]</argsstring>
        <name>arduinoLocation</name>
        <initializer>= &quot;/dev/ttyACM0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="28" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_arduino_l_k_m_8c_1a995dbfc35a00c774e082b8d3d1bb3be4" prot="public" static="yes" mutable="no">
        <type>struct file *</type>
        <definition>struct file* arduinoFile</definition>
        <argsstring></argsstring>
        <name>arduinoFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="29" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_arduino_l_k_m_8c_1a6b0a5d138d34671264d4763036d71500" prot="public" static="yes" mutable="no">
        <type>struct kobj_attribute</type>
        <definition>struct kobj_attribute pressCount_attr</definition>
        <argsstring></argsstring>
        <name>pressCount_attr</name>
        <initializer>= __ATTR(buttonStats, 0666, buttonStats_show,
   buttonStats_store)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macros to handle the attributes of the LKM. pressCount for the button press times, to show or to store a different value. ledMode for the mode that the arduino will use the leds. burstRep fot the repetition of the burst mode. ledStatus(read only attribute) the status of the led on or off. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="130" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_arduino_l_k_m_8c_1a4b76ad67c7b49f77479645ee3a84d2d8" prot="public" static="yes" mutable="no">
        <type>struct kobj_attribute</type>
        <definition>struct kobj_attribute ledMode_attr</definition>
        <argsstring></argsstring>
        <name>ledMode_attr</name>
        <initializer>= __ATTR(ledMode, 0666, ledMode_show, ledMode_store)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="130" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_arduino_l_k_m_8c_1ad8d8fe3bb10eb603acbee206bb602583" prot="public" static="yes" mutable="no">
        <type>struct kobj_attribute</type>
        <definition>struct kobj_attribute busrtRep_attr</definition>
        <argsstring></argsstring>
        <name>busrtRep_attr</name>
        <initializer>= __ATTR(burst, 0666, burstRep_show, burstRep_store)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="130" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_arduino_l_k_m_8c_1a983148611af3a2896f0fd04e3bdeb9c2" prot="public" static="yes" mutable="no">
        <type>struct kobj_attribute</type>
        <definition>struct kobj_attribute ledStatus_attr</definition>
        <argsstring></argsstring>
        <name>ledStatus_attr</name>
        <initializer>= __ATTR_RO(ledStatus)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="130" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_arduino_l_k_m_8c_1a552c365ff3a628c719a3ef18ac32d6b7" prot="public" static="yes" mutable="no">
        <type>struct attribute *</type>
        <definition>struct attribute* arduino_attrs[]</definition>
        <argsstring>[]</argsstring>
        <name>arduino_attrs</name>
        <initializer>= {
      &amp;pressCount_attr.attr,
      &amp;ledStatus_attr.attr,
      &amp;ledMode_attr.attr,
      &amp;busrtRep_attr.attr,
      NULL,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>struct that list the attributes of the arduino LKM. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="163" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_arduino_l_k_m_8c_1ab8dec0e29e846e118b5a393564398008" prot="public" static="yes" mutable="no">
        <type>struct attribute_group</type>
        <definition>struct attribute_group attr_group</definition>
        <argsstring></argsstring>
        <name>attr_group</name>
        <initializer>= {
      .name  = arduinoPort,
      .attrs = arduino_attrs,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A attribute group that will have the arduino port name and the previous defined attribute array arduino_attrs[]. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="163" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_arduino_l_k_m_8c_1a22a7237a4643f73bdf48c93c26d27a1b" prot="public" static="yes" mutable="no">
        <type>struct kobject *</type>
        <definition>struct kobject* arduino_kObject</definition>
        <argsstring></argsstring>
        <name>arduino_kObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="180" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_arduino_l_k_m_8c_1ad94b36675e7eb067ea3ce6ff9e244a44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MODULE_LICENSE</definition>
        <argsstring>(&quot;GPL&quot;)</argsstring>
        <name>MODULE_LICENSE</name>
        <param>
          <type>&quot;GPL&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_arduino_l_k_m_8c_1ad5eacd749330408d3e2de4eb7ad60245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MODULE_AUTHOR</definition>
        <argsstring>(&quot;Malcolm Davis&quot;)</argsstring>
        <name>MODULE_AUTHOR</name>
        <param>
          <type>&quot;Malcolm Davis&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_arduino_l_k_m_8c_1a1f4e58679711fc4e6bfaa31fc4f7f197" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MODULE_AUTHOR</definition>
        <argsstring>(&quot;Arturo Chinchilla&quot;)</argsstring>
        <name>MODULE_AUTHOR</name>
        <param>
          <type>&quot;Arturo Chinchilla&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_arduino_l_k_m_8c_1a2db0e397a40e3bf401d01c9b455df68f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MODULE_DESCRIPTION</definition>
        <argsstring>(&quot;LKM for Linux 3.x which will be written in pure C and interact with an Arduino device.&quot;)</argsstring>
        <name>MODULE_DESCRIPTION</name>
        <param>
          <type>&quot;LKM for Linux 3.x which will be written in pure C and interact with an Arduino device.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_arduino_l_k_m_8c_1a94716498ea965ce9e6e3bc9163843b65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MODULE_VERSION</definition>
        <argsstring>(&quot;0.5&quot;)</argsstring>
        <name>MODULE_VERSION</name>
        <param>
          <type>&quot;0.5&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_arduino_l_k_m_8c_1ad772c2e9400b8fe08a9fd85a8807a175" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>static ssize_t buttonStats_show</definition>
        <argsstring>(struct kobject *kernelObject, struct kobj_attribute *attribute, char *buffer)</argsstring>
        <name>buttonStats_show</name>
        <param>
          <type>struct kobject *</type>
          <declname>kernelObject</declname>
        </param>
        <param>
          <type>struct kobj_attribute *</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Function that returns the number that represents the times the button have been pressed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kernelObject</parametername>
</parameternamelist>
<parameterdescription>
<para>object that repressent the devices of the sysfs File System. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attribute</parametername>
</parameternamelist>
<parameterdescription>
<para>the attribute of the object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer that will have the total number. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>return the number of characters without null. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="39" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="_arduino_l_k_m_8c_1ace9eecd25407b8c717da6bfe4d9224db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>static ssize_t buttonStats_store</definition>
        <argsstring>(struct kobject *kernelObject, struct kobj_attribute *attribute, const char *buffer, size_t count)</argsstring>
        <name>buttonStats_store</name>
        <param>
          <type>struct kobject *</type>
          <declname>kernelObject</declname>
        </param>
        <param>
          <type>struct kobj_attribute *</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Function to store the button press number. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kernelObject</parametername>
</parameternamelist>
<parameterdescription>
<para>object that repressent the devices of the sysfs File System. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attribute</parametername>
</parameternamelist>
<parameterdescription>
<para>the attribute of the object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer that will have the total number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>the number characters of the buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>return the number of buffer characters used. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="51" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="51" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="_arduino_l_k_m_8c_1a0f5086e678e8bc02687d78f1224b3603" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>static ssize_t ledStatus_show</definition>
        <argsstring>(struct kobject *kernelObject, struct kobj_attribute *attribute, char *buffer)</argsstring>
        <name>ledStatus_show</name>
        <param>
          <type>struct kobject *</type>
          <declname>kernelObject</declname>
        </param>
        <param>
          <type>struct kobj_attribute *</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Shows the status of the led (on or off). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kernelObject</parametername>
</parameternamelist>
<parameterdescription>
<para>represents a kernel object device that appears in the sysfs filesystem </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attribute</parametername>
</parameternamelist>
<parameterdescription>
<para>the attribute of the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer that will have the button state. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="73" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="_arduino_l_k_m_8c_1a7dcd1f9ba14d8647da38d6f9b08c32b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>static ssize_t ledMode_show</definition>
        <argsstring>(struct kobject *kernelObject, struct kobj_attribute *attribute, char *buffer)</argsstring>
        <name>ledMode_show</name>
        <param>
          <type>struct kobject *</type>
          <declname>kernelObject</declname>
        </param>
        <param>
          <type>struct kobj_attribute *</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Shows the mode that the led will function on (ON-OFF or BURST)-(0 or 1). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kernelObject</parametername>
</parameternamelist>
<parameterdescription>
<para>represents a kernel object device that appears in the sysfs filesystem </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attribute</parametername>
</parameternamelist>
<parameterdescription>
<para>the attribute of the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer that will have the button mode. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="84" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="_arduino_l_k_m_8c_1a4e8a63ddccfb0e20cac3fcca4e8d30fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>static ssize_t ledMode_store</definition>
        <argsstring>(struct kobject *kernelObject, struct kobj_attribute *attribute, char *buffer, size_t count)</argsstring>
        <name>ledMode_store</name>
        <param>
          <type>struct kobject *</type>
          <declname>kernelObject</declname>
        </param>
        <param>
          <type>struct kobj_attribute *</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Function to store the led mode (ON-OFF or BURST)-(0 or 1). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kernelObject</parametername>
</parameternamelist>
<parameterdescription>
<para>object that repressent the devices of the sysfs File System. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attribute</parametername>
</parameternamelist>
<parameterdescription>
<para>the attribute of the object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer that will have Led Mode(0 or 1). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>the number characters of the buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>return the number of buffer characters used. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="96" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="96" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="_arduino_l_k_m_8c_1a59f4d4def1b46580a9f60a525f602ece" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>static ssize_t burstRep_show</definition>
        <argsstring>(struct kobject *kernelObject, struct kobj_attribute *attribute, char *buffer)</argsstring>
        <name>burstRep_show</name>
        <param>
          <type>struct kobject *</type>
          <declname>kernelObject</declname>
        </param>
        <param>
          <type>struct kobj_attribute *</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Shows the repetition number of the burst function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kernelObject</parametername>
</parameternamelist>
<parameterdescription>
<para>represents a kernel object device that appears in the sysfs filesystem </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attribute</parametername>
</parameternamelist>
<parameterdescription>
<para>the attribute of the object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer that will have repetition number. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="118" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="_arduino_l_k_m_8c_1ab1f69765ec8a322c637c7ae21a9473f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>static ssize_t burstRep_store</definition>
        <argsstring>(struct kobject *kernelObject, struct kobj_attribute *attribute, const char *buffer, size_t count)</argsstring>
        <name>burstRep_store</name>
        <param>
          <type>struct kobject *</type>
          <declname>kernelObject</declname>
        </param>
        <param>
          <type>struct kobj_attribute *</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Function to store the repetition number of the burst function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kernelObject</parametername>
</parameternamelist>
<parameterdescription>
<para>object that repressent the devices of the sysfs File System. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attribute</parametername>
</parameternamelist>
<parameterdescription>
<para>the attribute of the object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer that will have the repetition number of the burst function(0...n). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>the number characters of the buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>return the number of buffer characters used. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="130" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="130" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="_arduino_l_k_m_8c_1a5fc1cb3e5850da2aa8eba88909332302" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int __init</type>
        <definition>static int __init arduinoLKM_init</definition>
        <argsstring>(void)</argsstring>
        <name>arduinoLKM_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>The LKM initialization function. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>returns 0 if successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="187" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="187" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="_arduino_l_k_m_8c_1a96e4ded0c4f0d6c00ac7d3764cf9ecde" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void __exit</type>
        <definition>static void __exit arduinoLKM_exit</definition>
        <argsstring>(void)</argsstring>
        <name>arduinoLKM_exit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>The arduinoLKM cleanup function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="221" column="1" bodyfile="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" bodystart="221" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="_arduino_l_k_m_8c_1a0c1f4008f8b2896e77d4c9985f8d379d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>module_init</definition>
        <argsstring>(arduinoLKM_init)</argsstring>
        <name>module_init</name>
        <param>
          <type>arduinoLKM_init</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_arduino_l_k_m_8c_1adfccffbae6462d3e283603217a7e2559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>module_exit</definition>
        <argsstring>(arduinoLKM_exit)</argsstring>
        <name>module_exit</name>
        <param>
          <type>arduinoLKM_exit</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c" line="232" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A kernel module for controlling a arduino led project has 2 modes, flash or burst, (suports interruptions) and can be modified on linux user space with echo. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Malcolm Davis </para><simplesectsep/><para>Arturo Chinchilla </para></simplesect>
<simplesect kind="date"><para>March 23 2015 </para></simplesect>
<simplesect kind="see"><para><ulink url="https://github.com/LKMInvestigation/Linux-Kernel-Module">https://github.com/LKMInvestigation/Linux-Kernel-Module</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#include<sp/>&lt;linux/init.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/module.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/kobject.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="file_handler_8c" kindref="compound">fileHandler.c</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="_arduino_l_k_m_8c_1ad94b36675e7eb067ea3ce6ff9e244a44" kindref="member">MODULE_LICENSE</ref>(</highlight><highlight class="stringliteral">&quot;GPL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="_arduino_l_k_m_8c_1ad5eacd749330408d3e2de4eb7ad60245" kindref="member">MODULE_AUTHOR</ref>(</highlight><highlight class="stringliteral">&quot;Malcolm<sp/>Davis&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="_arduino_l_k_m_8c_1ad5eacd749330408d3e2de4eb7ad60245" kindref="member">MODULE_AUTHOR</ref>(</highlight><highlight class="stringliteral">&quot;Arturo<sp/>Chinchilla&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="_arduino_l_k_m_8c_1a2db0e397a40e3bf401d01c9b455df68f" kindref="member">MODULE_DESCRIPTION</ref>(</highlight><highlight class="stringliteral">&quot;LKM<sp/>for<sp/>Linux<sp/>3.x<sp/>which<sp/>will<sp/>be<sp/>written<sp/>in<sp/>pure<sp/>C<sp/>and<sp/>interact<sp/>with<sp/>an<sp/>Arduino<sp/>device.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="_arduino_l_k_m_8c_1a94716498ea965ce9e6e3bc9163843b65" kindref="member">MODULE_VERSION</ref>(</highlight><highlight class="stringliteral">&quot;0.5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buttonStats<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>burstRep<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ledStatus<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ledMode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>arduinoPort[8]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ttyACM0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>arduinoLocation[13]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/dev/ttyACM0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">file<sp/>*arduinoFile;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ssize_t<sp/>buttonStats_show(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>kobject<sp/>*kernelObject,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>kobj_attribute<sp/>*attribute,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer){</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sprintf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<sp/>buttonStats);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ssize_t<sp/>buttonStats_store(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>kobject<sp/>*kernelObject,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>kobj_attribute<sp/>*attribute,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>sscanf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%du&quot;</highlight><highlight class="normal">,<sp/>&amp;buttonStats);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>printk(</highlight><highlight class="stringliteral">&quot;ARduinoLKM:<sp/>Buffer<sp/>Count:<sp/>%d\n&quot;</highlight><highlight class="normal">,count);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>printk(</highlight><highlight class="stringliteral">&quot;ARduinoLKM:<sp/>Buffer:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>*buffer);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(PTR_ERR(arduinoFile)&gt;0){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="file_handler_8c_1abd392bd9547474451292a96b2bf328ba" kindref="member">file_write</ref>(arduinoFile,<sp/>buffer,<sp/>count);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>!=<sp/>count){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printk(<sp/></highlight><highlight class="stringliteral">&quot;ARduinoLKM:<sp/>Did<sp/>not<sp/>write,<sp/>error:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>ERR_PTR(ret));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printk(<sp/></highlight><highlight class="stringliteral">&quot;ARduinoLKM:<sp/>Write,<sp/>code:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>ERR_PTR(ret));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ssize_t<sp/>ledStatus_show(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>kobject<sp/>*kernelObject,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>kobj_attribute<sp/>*attribute,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>(int)ledStatus;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sprintf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<sp/>tmp);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ssize_t<sp/>ledMode_show(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>kobject<sp/>*kernelObject,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>kobj_attribute<sp/>*attribute,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer){</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sprintf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<sp/>ledMode);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ssize_t<sp/>ledMode_store(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>kobject<sp/>*kernelObject,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>kobj_attribute<sp/>*attribute,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count){</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%du&quot;</highlight><highlight class="normal">,<sp/>&amp;ledMode);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>printk(</highlight><highlight class="stringliteral">&quot;ARduinoLKM:<sp/>Buffer<sp/>Count:<sp/>%d\n&quot;</highlight><highlight class="normal">,count);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>printk(</highlight><highlight class="stringliteral">&quot;ARduinoLKM:<sp/>Buffer:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>*buffer);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(PTR_ERR(arduinoFile)&gt;0){</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="file_handler_8c_1abd392bd9547474451292a96b2bf328ba" kindref="member">file_write</ref>(arduinoFile,<sp/>buffer,<sp/>count);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>!=<sp/>count){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printk(<sp/></highlight><highlight class="stringliteral">&quot;ARduinoLKM:<sp/>Did<sp/>not<sp/>write,<sp/>error:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>ERR_PTR(ret));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printk(<sp/></highlight><highlight class="stringliteral">&quot;ARduinoLKM:<sp/>Write,<sp/>code:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>ERR_PTR(ret));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ssize_t<sp/>burstRep_show(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>kobject<sp/>*kernelObject,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>kobj_attribute<sp/>*attribute,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sprintf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<sp/>burstRep);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ssize_t<sp/>burstRep_store(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>kobject<sp/>*kernelObject,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>kobj_attribute<sp/>*attribute,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>sscanf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%du&quot;</highlight><highlight class="normal">,<sp/>&amp;burstRep);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/>printk(</highlight><highlight class="stringliteral">&quot;ARduinoLKM:<sp/>Buffer<sp/>Count:<sp/>%d\n&quot;</highlight><highlight class="normal">,count);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>printk(</highlight><highlight class="stringliteral">&quot;ARduinoLKM:<sp/>Buffer:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>*buffer);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(PTR_ERR(arduinoFile)<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="file_handler_8c_1abd392bd9547474451292a96b2bf328ba" kindref="member">file_write</ref>(arduinoFile,<sp/>buffer,<sp/>count);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>!=<sp/>count){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printk(<sp/></highlight><highlight class="stringliteral">&quot;ARduinoLKM:<sp/>Did<sp/>not<sp/>write,<sp/>error:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>ERR_PTR(ret));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printk(<sp/></highlight><highlight class="stringliteral">&quot;ARduinoLKM:<sp/>Write,<sp/>code:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>ERR_PTR(ret));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">kobj_attribute<sp/>pressCount_attr<sp/>=<sp/>__ATTR(buttonStats,<sp/>0666,<sp/>buttonStats_show,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>buttonStats_store);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">kobj_attribute<sp/>ledMode_attr<sp/>=<sp/>__ATTR(ledMode,<sp/>0666,<sp/>ledMode_show,<sp/>ledMode_store);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">kobj_attribute<sp/>busrtRep_attr<sp/>=<sp/>__ATTR(burst,<sp/>0666,<sp/>burstRep_show,<sp/>burstRep_store);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">kobj_attribute<sp/>ledStatus_attr<sp/>=<sp/>__ATTR_RO(ledStatus);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">attribute<sp/>*arduino_attrs[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pressCount_attr.attr,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ledStatus_attr.attr,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ledMode_attr.attr,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;busrtRep_attr.attr,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="169"><highlight class="normal">};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">attribute_group<sp/>attr_group<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/><sp/>=<sp/>arduinoPort,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.attrs<sp/>=<sp/>arduino_attrs,</highlight></codeline>
<codeline lineno="178"><highlight class="normal">};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">kobject<sp/>*arduino_kObject;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__init<sp/>arduinoLKM_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/>arduinoFile=<sp/><ref refid="file_handler_8c_1a892cd60a3a9cfd2df7364b2f4696e6b1" kindref="member">file_open</ref>(arduinoLocation);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!arduinoFile){</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printk(</highlight><highlight class="stringliteral">&quot;ArduinoLKM:<sp/>cannot<sp/>open<sp/>the<sp/>arduino.%d\n&quot;</highlight><highlight class="normal">,<sp/>PTR_ERR(arduinoFile));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ENOMEM;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printk(<sp/></highlight><highlight class="stringliteral">&quot;ArduinoLKM:<sp/><sp/>The<sp/>arduino<sp/>has<sp/>been<sp/>opened.<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>PTR_ERR(arduinoFile));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>printk(KERN_INFO<sp/></highlight><highlight class="stringliteral">&quot;ArduinoLKM:<sp/>Initializing<sp/>the<sp/>Arduino<sp/>LKM.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>kobject<sp/>sysfs<sp/>entry<sp/>at<sp/>/sys/Arduino<sp/>--<sp/>probably<sp/>not<sp/>an<sp/>ideal<sp/>location!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/>arduino_kObject<sp/>=<sp/>kobject_create_and_add(</highlight><highlight class="stringliteral">&quot;Arduino&quot;</highlight><highlight class="normal">,<sp/>kernel_kobj-&gt;parent);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!arduino_kObject){</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printk(KERN_ALERT<sp/></highlight><highlight class="stringliteral">&quot;ArduinoLKM:<sp/>cannot<sp/>create<sp/>the<sp/>kobject.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ENOMEM;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>attributes<sp/>to<sp/>/sys/Arduino/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/>result<sp/>=<sp/>sysfs_create_group(arduino_kObject,<sp/>&amp;attr_group);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printk(KERN_INFO<sp/></highlight><highlight class="stringliteral">&quot;ArduinoLKM:<sp/>cannot<sp/>create<sp/>the<sp/>sysfs<sp/>group\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kobject_put(arduino_kObject);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/>ledStatus<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Just<sp/>for<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/>printk(KERN_INFO<sp/></highlight><highlight class="stringliteral">&quot;ArduinoLKM:<sp/>Init<sp/>Done.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__exit<sp/>arduinoLKM_exit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/>printk(KERN_INFO<sp/></highlight><highlight class="stringliteral">&quot;ArduinoLKM:<sp/>The<sp/>button<sp/>has<sp/>been<sp/>pressed<sp/>%d<sp/>times\n&quot;</highlight><highlight class="normal">,<sp/>buttonStats);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>kobject_put(arduino_kObject);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clean<sp/>up<sp/>--<sp/>remove<sp/>the<sp/>kobject<sp/>sysfs<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/>printk(KERN_INFO<sp/></highlight><highlight class="stringliteral">&quot;ArduinoLKM:<sp/>Closing<sp/>device!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(arduinoFile&gt;0){</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="file_handler_8c_1ab9185f3cebd9ae7fd0816abac26352e3" kindref="member">file_close</ref>(arduinoFile);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/>printk(KERN_INFO<sp/></highlight><highlight class="stringliteral">&quot;ArduinoLKM:<sp/>Goodbye<sp/>from<sp/>the<sp/>Arduino<sp/>LKM!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><ref refid="_arduino_l_k_m_8c_1a0c1f4008f8b2896e77d4c9985f8d379d" kindref="member">module_init</ref>(arduinoLKM_init);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><ref refid="_arduino_l_k_m_8c_1adfccffbae6462d3e283603217a7e2559" kindref="member">module_exit</ref>(arduinoLKM_exit);</highlight></codeline>
    </programlisting>
    <location file="/home/jesteban/Escritorio/malcolm/Linux-Kernel-Module/Program/ArduinoLKM.c"/>
  </compounddef>
</doxygen>
